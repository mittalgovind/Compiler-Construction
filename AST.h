typedef struct astnode
{
	int symbol;
	char info[ID_LEN];
	int line_no;
	struct astnode* child;
	struct astnode* next;
}Node;

int getAstSize();
Node* reduceMainFunction(ParseTree);
Node* reduceStmtAndFunctionDefs(ParseTree);
Node* reduceStmtOrFunctionDef(ParseTree);
Node* reduceStmt(ParseTree);
Node* reduceFunctionDef(ParseTree);
Node* reduceParameter_list(ParseTree);
Node* reduceType(ParseTree);
Node* reduceRemainingList(ParseTree);
Node* reduceDeclarationStmt(ParseTree);
Node* reduceAssignmentStmt(ParseTree);
Node* reduceFunCallStmt(ParseTree);
Node* reduceLeftHandSide(ParseTree);
Node* reduceRightHandSide(ParseTree);
Node* reduceFunctionCall(ParseTree);
Node* reduceSizeOf(ParseTree);
Node* reduceConditionalStmt(ParseTree);
Node* reduceElse_stmt(ParseTree);
Node* reduceOtherStmts(ParseTree);
Node* reduceIoStmt(ParseTree);
Node* reduceArithmeticExpression(ParseTree);
Node* reduceTerm(ParseTree);
Node* reduceSub_expression(ParseTree);
Node* reduceFactor(ParseTree);
Node* reduceOperator1(ParseTree);
Node* reduceOperator2(ParseTree);
Node* reduceArith_operator(ParseTree);
Node* reduceBooleanExpression(ParseTree);
Node* reduceVar(ParseTree);
Node* reduceMatrixElement(ParseTree);
Node* reduceMatrixValues(ParseTree);
Node* reduceRow_list(ParseTree);
Node* reduceRest_list(ParseTree);
Node* reduceLogicalOp(ParseTree);
Node* reduceRelationalOp(ParseTree);
Node* reduceVar_list(ParseTree);
Node* reduceMore_ids(ParseTree);
Node* reduceMoreStatements(ParseTree);
Node* reduceRem_rowlist(ParseTree);
Node* reduceInput_list(ParseTree);
void printAST(Node*);

char* typeOfID(Node* ast, char* type);
char* typeOfVarList(Node* ast, char* type);
char* typeOfMat(Node* ast, char* type);
char* typeOfArithmeticExpr(Node* ast, char* type);
char* typeOfFunctionCall(Node* ast, char* type);
char* typeOfSizeOf(Node* ast, char* type);
char* typeOfLHS(Node* ast, char* type);
char* typeOfRHS(Node* ast, char* type);